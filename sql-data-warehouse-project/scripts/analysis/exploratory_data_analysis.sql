/*
==================================================================
	Database Exploration
==================================================================

*/

USE DataWarehouse

-- Explore All Objects in the Database
SELECT 
	* 
FROM INFORMATION_SCHEMA.TABLES;

-- Explore All Columns in the Database
SELECT 
	* 
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'dim_customers';


/*
==================================================================
	Dimension Exploration
==================================================================

*/

-- Explore All countries our customers come from

SELECT DISTINCT country FROM gold.dim_customers;

-- Explore All Categories "The major Divisions"

SELECT DISTINCT 
	category, 
	subcategory, 
	product_name
FROM gold.dim_products
ORDER BY 1,2,3;

/*
==================================================================
	Date Exploration
==================================================================

*/

-- Find the date of the first and last order
-- how many years of sales do we have in our dataset

SELECT 
	MIN(order_date) first_order_date, 
	MAX(order_date) last_order_date, 
	DATEDIFF(YEAR, MIN(order_date), MAX(order_date)) order_range_years
FROM gold.fact_sales;

-- Find the youngest and oldest customer
SELECT 
	MIN(birthdate) as oldest_birthdate, 
	DATEDIFF(YEAR, MIN(birthdate), GETDATE()) oldest_age,
	MAX(birthdate) AS youngest_birthdate,
	DATEDIFF(YEAR, MAX(birthdate), GETDATE()) youngest_age
FROM gold.dim_customers;

/*
==================================================================
	Measures Exploration
==================================================================

*/

-- Find the Total Sales
SELECT 
	SUM(sales_amount) total_sales
FROM gold.fact_sales;

-- Find How many items are sold 
SELECT 
	SUM(quantity) total_quantity
FROM gold.fact_sales;

-- Find the average selling price
SELECT 
	AVG(price) avg_price
FROM gold.fact_sales;

-- Find the Total number of Orders
SELECT 
	COUNT(DISTINCT order_number) 
FROM gold.fact_sales;

-- Find the total number of Products 
SELECT 
	COUNT(product_number) total_products
FROM gold.dim_products;

-- Find the total number of customers
SELECT 
	COUNT(customer_key) total_customers
FROM gold.dim_customers;

-- find the total number of customers that has placed an order
SELECT 
	COUNT(DISTINCT customer_key) total_customers
FROM gold.fact_sales;


-- Generate a Report that shows all key metrics of the business 

SELECT 'Total Sales' as Measure_name, SUM(sales_amount) measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Total Quantity' as Measure_name, SUM(quantity) measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Average Price' as Measure_name, AVG(price) measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Total nbr. Orders' as Measure_name, COUNT(DISTINCT order_number) measure_value FROM gold.fact_sales
UNION ALL 
SELECT 'Total nbr. Products' as Measure_name, COUNT(product_name) measure_value FROM gold.dim_products
UNION ALL
SELECT 'Total nbr. Products' as Measure_name, COUNT(product_name) measure_value FROM gold.dim_products
UNION ALL
SELECT 'Total nbr. Customer' as Measure_name, COUNT(customer_key) measure_value FROM gold.dim_customers;


/*
==================================================================
	Magnitude Analysis
==================================================================

*/

-- Find total customers by countries
SELECT 
	country,
	COUNT(customer_key) total_customers
FROM gold.dim_customers
GROUP BY country
ORDER BY total_customers DESC;

-- Find total customers by gender
SELECT 
	gender,
	COUNT(customer_key) total_customers
FROM gold.dim_customers
GROUP BY gender
ORDER BY total_customers DESC;

-- Find total products by category
SELECT 
	category, 
	COUNT(product_key) total_products
FROM gold.dim_products
GROUP BY category
ORDER BY total_products DESC;

-- What is the average costs in each category? 
SELECT 
	category, 
	AVG(cost) average_cost
FROM gold.dim_products
GROUP BY category
ORDER BY average_cost DESC;

-- What is the total revenue generated for each category?
SELECT 
	p.category, 
	SUM(s.sales_amount) total_revenue
FROM gold.fact_sales s
LEFT JOIN gold.dim_products p 
	ON s.product_key = p.product_key
GROUP BY p.category
ORDER BY total_revenue DESC;

-- Find total revenue is generated by each customer
SELECT 
	c.customer_key,
	c.first_name, 
	c.last_name,
	SUM(s.sales_amount) total_revenue
FROM gold.fact_sales s
LEFT JOIN gold.dim_customers c 
	ON s.customer_key = c.customer_key
GROUP BY c.customer_key,
		 c.first_name, 
		 c.last_name
ORDER BY total_revenue DESC;


-- What is the distribution of sold items accoss countries?

SELECT 
	p.country, 
	SUM(s.quantity) total_revenue
FROM gold.fact_sales s
LEFT JOIN gold.dim_customers p 
	ON s.customer_key = p.customer_key
GROUP BY p.country
ORDER BY total_revenue DESC;

/*
==================================================================
	Ranking Analysis
==================================================================

*/


-- Which 5 Products generate the highest revenue?

SELECT TOP 5
	dp.product_name, 
	SUM(fs.sales_amount) total_revenue
FROM gold.fact_sales fs
LEFT JOIN gold.dim_products dp 
	ON fs.product_key = dp.product_key
GROUP BY dp.product_name
ORDER BY total_revenue DESC;

-- *** Top 5 product by revenue (using WINDOWS FUNCTIONS)***
SELECT 
	product_name, 
	total_revenue, 
	rank_products
FROM (
	SELECT 
		dc.product_name, 
		SUM(fs.sales_amount) total_revenue, 
		ROW_NUMBER() OVER(ORDER BY SUM(fs.sales_amount) DESC) AS rank_products 
	FROM gold.fact_sales fs
	LEFT JOIN gold.dim_products dc 
		ON fs.product_key = dc.product_key
	GROUP BY dc.product_name) temp
WHERE rank_products < 6;


-- What are the 5 worst-performing products in terms of sales? 
SELECT TOP 5
	dc.product_name, 
	SUM(fs.sales_amount) total_revenue
FROM gold.fact_sales fs
LEFT JOIN gold.dim_products dc 
	ON fs.product_key = dc.product_key
GROUP BY dc.product_name
ORDER BY total_revenue ASC;

-- Which 5 Sub-categories generate the highest revenue?

SELECT TOP 5
	dc.subcategory, 
	SUM(fs.sales_amount) total_revenue
FROM gold.fact_sales fs
LEFT JOIN gold.dim_products dc 
	ON fs.product_key = dc.product_key
GROUP BY dc.subcategory
ORDER BY total_revenue DESC;

-- Top 10 customers who have generated the highest revenue 
SELECT TOP 10
	dc.customer_key,
	dc.first_name,
	dc.last_name,  
	SUM(fs.sales_amount) total_revenue
FROM gold.fact_sales fs
LEFT JOIN gold.dim_customers dc 
	ON fs.customer_key = dc.customer_key
GROUP BY dc.customer_key,
		 dc.first_name,
		 dc.last_name 
ORDER BY total_revenue DESC;

-- find the 3 customers with the fewest orders placed

SELECT TOP 3
	dc.customer_key,
	dc.first_name,
	dc.last_name, 
	COUNT(DISTINCT fs.order_number) total_orders
FROM gold.fact_sales fs
LEFT JOIN gold.dim_customers dc 
	ON fs.customer_key = dc.customer_key
GROUP BY dc.customer_key,
		 dc.first_name,
		 dc.last_name 
ORDER BY total_orders;
